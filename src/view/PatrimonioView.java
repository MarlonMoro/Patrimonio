/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import dao.BlocoDAO;
import dao.EntidadeDAO;
import dao.GrauConservacaoDAO;
import dao.PatrimonioDAO;
import dao.PisoDAO;
import dao.SalaDAO;
import dao.StatusDAO;
import dao.SubTipoDAO;
import dao.TipoDAO;
import dao.UnidadeDAO;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import model.BlocoM;
import model.EntidadeM;
import model.GrauConservacaoM;
import model.PatrimonioM;
import model.PisoM;
import model.SalaM;
import model.StatusM;
import model.SubTipoM;
import model.TipoM;
import model.UnidadeM;

/**
 * UNIVERSIDADE DO ESTADO DE MINAS GERAIS - Unidade Frutal
 * @author NUPSI - Núcle de Práticas em Sistemas de Informação
 * Equipe: Gustavo Pinoti,Leopoldo Ferreira, Marlon Moro, Murillo Cuervo
 */
public class PatrimonioView extends javax.swing.JInternalFrame {

    /**
     * Creates new form Patrimonio
     */
    PisoM piso;
    PisoDAO pisoDAO;
    List<PisoM> listaPiso;
    List<BlocoM> listaBloco;
    BlocoDAO blocoDAO;
    List<UnidadeM> listaUnidade;
    UnidadeDAO unidadeDAO;
    SalaDAO salaDAO;
    List<SalaM> listaSala;
    List<GrauConservacaoM> listaGrau;
    List<StatusM> listaStatus;
    GrauConservacaoDAO grauDAO;
    StatusDAO statusDAO;
    List<EntidadeM> listaEntidade;
    EntidadeDAO entidadeDAO;
    List<TipoM> listaTipo;
    TipoDAO tipoDAO;
    List<SubTipoM> listaSub;
    SubTipoDAO subtipoDAO;
    List<PatrimonioM> listaPatrimonio;
    PatrimonioDAO patrimonioDAO;
    PatrimonioM patrimonio;

    public PatrimonioView() {
        pisoDAO = new PisoDAO();
        listaPiso = new ArrayList<>();
        listaBloco = new ArrayList<>();
        blocoDAO = new BlocoDAO();
        listaUnidade = new ArrayList<>();
        unidadeDAO = new UnidadeDAO();
        salaDAO = new SalaDAO();
        listaSala = new ArrayList<>();
        listaGrau = new ArrayList<>();
        listaStatus = new ArrayList<>();
        grauDAO = new GrauConservacaoDAO();
        statusDAO = new StatusDAO();
        listaEntidade = new ArrayList<>();
        entidadeDAO = new EntidadeDAO();
        listaTipo = new ArrayList<>();
        tipoDAO = new TipoDAO();
        listaSub = new ArrayList<>();
        subtipoDAO = new SubTipoDAO();
        listaPatrimonio = new ArrayList<>();
        patrimonioDAO = new PatrimonioDAO();
        initComponents();
        this.setVisible(true);
        atualizaBoxUnidade();
        atualizaBoxTipo();
        atualizaBoxGrauConservacao();
        atualizaBoxStatus();
        atualizaBoxEntidade();
        atualizaTabelaPatrimonio();
        btnExcluirPatrimonio.setEnabled(false);
        btnAlterarPatrimonio.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlPatrimonio = new javax.swing.JPanel();
        lblStatus = new javax.swing.JLabel();
        lblNotaFiscal = new javax.swing.JLabel();
        lblPatrimonio = new javax.swing.JLabel();
        tfdNotaFiscalPatrimonio = new javax.swing.JTextField();
        lblCodigo = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        tfdCodigoPatrimonio = new javax.swing.JTextField();
        cbxOrgao = new javax.swing.JComboBox<>();
        lblDescricao = new javax.swing.JLabel();
        tfdDescricaoPatrimonio = new javax.swing.JTextField();
        lblGrauConservacao = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbePatrimonio = new javax.swing.JTable();
        cbxConservacao = new javax.swing.JComboBox<>();
        cbxStatus = new javax.swing.JComboBox<>();
        btnExcluirPatrimonio = new javax.swing.JButton();
        btnSalvarPatrimonio = new javax.swing.JButton();
        btnAlterarPatrimonio = new javax.swing.JButton();
        btnNovoPatrimonio = new javax.swing.JButton();
        lblID = new javax.swing.JLabel();
        tfdIDPatrimonio = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        lblSelecUnidade = new javax.swing.JLabel();
        cbxUnidade = new javax.swing.JComboBox<>();
        lblSelecBloco = new javax.swing.JLabel();
        cbxBloco = new javax.swing.JComboBox<>();
        lblSelecPiso = new javax.swing.JLabel();
        cbxPiso = new javax.swing.JComboBox<>();
        lblSelecSala = new javax.swing.JLabel();
        cbxSala = new javax.swing.JComboBox<>();
        jPanel1 = new javax.swing.JPanel();
        lblSelecTipo = new javax.swing.JLabel();
        cbxTipo = new javax.swing.JComboBox<>();
        lblSelecSubtipo = new javax.swing.JLabel();
        cbxSuptipo = new javax.swing.JComboBox<>();
        btnCancelarPatrimonio = new javax.swing.JButton();

        setClosable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Cadastrar Patrimônio");

        lblStatus.setText("Status");

        lblNotaFiscal.setText("Nota Fiscal");

        lblPatrimonio.setText("Patrimônio");

        tfdNotaFiscalPatrimonio.setEnabled(false);

        lblCodigo.setText("Código");

        jLabel2.setText("Orgão");

        tfdCodigoPatrimonio.setEnabled(false);

        cbxOrgao.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "UEMG" }));
        cbxOrgao.setEnabled(false);

        lblDescricao.setText("Descrição");

        tfdDescricaoPatrimonio.setEnabled(false);

        lblGrauConservacao.setText("Grau de Conservação");

        tbePatrimonio.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Código", "Descrição", "Grau de Consevação", "Status", "Nota Fiscal", "Orgão"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbePatrimonio.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbePatrimonioMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbePatrimonio);

        cbxConservacao.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Piso 1" }));
        cbxConservacao.setEnabled(false);
        cbxConservacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxConservacaoActionPerformed(evt);
            }
        });

        cbxStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Piso 1" }));
        cbxStatus.setEnabled(false);

        btnExcluirPatrimonio.setText("Excluir");
        btnExcluirPatrimonio.setEnabled(false);
        btnExcluirPatrimonio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirPatrimonioActionPerformed(evt);
            }
        });

        btnSalvarPatrimonio.setText("Salvar");
        btnSalvarPatrimonio.setEnabled(false);
        btnSalvarPatrimonio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarPatrimonioActionPerformed(evt);
            }
        });

        btnAlterarPatrimonio.setText("Alterar");
        btnAlterarPatrimonio.setEnabled(false);
        btnAlterarPatrimonio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarPatrimonioActionPerformed(evt);
            }
        });

        btnNovoPatrimonio.setText("Novo");
        btnNovoPatrimonio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoPatrimonioActionPerformed(evt);
            }
        });

        lblID.setText("ID");

        tfdIDPatrimonio.setEditable(false);
        tfdIDPatrimonio.setEnabled(false);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Localização"));

        lblSelecUnidade.setText("Selecione a unidade:");

        cbxUnidade.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "UEMG" }));
        cbxUnidade.setEnabled(false);
        cbxUnidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxUnidadeActionPerformed(evt);
            }
        });

        lblSelecBloco.setText("Selecione o bloco:");

        cbxBloco.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Bloco A" }));
        cbxBloco.setEnabled(false);
        cbxBloco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxBlocoActionPerformed(evt);
            }
        });

        lblSelecPiso.setText("Selecione o piso:");

        cbxPiso.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Piso 1" }));
        cbxPiso.setEnabled(false);
        cbxPiso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxPisoActionPerformed(evt);
            }
        });

        lblSelecSala.setText("Selecione a sala:");

        cbxSala.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Sala 1" }));
        cbxSala.setEnabled(false);
        cbxSala.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxSalaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(cbxUnidade, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(lblSelecUnidade)
            .addComponent(lblSelecBloco)
            .addComponent(cbxBloco, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(lblSelecPiso)
            .addComponent(cbxPiso, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(lblSelecSala)
            .addComponent(cbxSala, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(lblSelecUnidade)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbxUnidade, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblSelecBloco)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbxBloco, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblSelecPiso)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbxPiso, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblSelecSala)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbxSala, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Categoria"));

        lblSelecTipo.setText("Selecione o Tipo:");

        cbxTipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mobilia", "Cadastrar Tipo" }));
        cbxTipo.setEnabled(false);
        cbxTipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxTipoActionPerformed(evt);
            }
        });

        lblSelecSubtipo.setText("Selecione a Subtipo:");

        cbxSuptipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Cadeira", "Cadastrar Subtipo" }));
        cbxSuptipo.setEnabled(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblSelecTipo)
            .addComponent(cbxTipo, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(lblSelecSubtipo)
            .addComponent(cbxSuptipo, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(lblSelecTipo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbxTipo, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblSelecSubtipo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbxSuptipo, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        btnCancelarPatrimonio.setText("Cancelar");
        btnCancelarPatrimonio.setEnabled(false);
        btnCancelarPatrimonio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarPatrimonioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlPatrimonioLayout = new javax.swing.GroupLayout(pnlPatrimonio);
        pnlPatrimonio.setLayout(pnlPatrimonioLayout);
        pnlPatrimonioLayout.setHorizontalGroup(
            pnlPatrimonioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPatrimonioLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlPatrimonioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(pnlPatrimonioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlPatrimonioLayout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(btnNovoPatrimonio)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSalvarPatrimonio)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCancelarPatrimonio)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnAlterarPatrimonio)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnExcluirPatrimonio))
                    .addGroup(pnlPatrimonioLayout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(pnlPatrimonioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfdIDPatrimonio, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(pnlPatrimonioLayout.createSequentialGroup()
                                .addComponent(lblID)
                                .addGap(57, 57, 57)
                                .addComponent(lblPatrimonio))
                            .addComponent(lblDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(pnlPatrimonioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(tfdCodigoPatrimonio, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lblGrauConservacao, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lblStatus, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lblNotaFiscal, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(cbxStatus, javax.swing.GroupLayout.Alignment.LEADING, 0, 270, Short.MAX_VALUE)
                                .addComponent(cbxConservacao, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(cbxOrgao, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(tfdDescricaoPatrimonio, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(tfdNotaFiscalPatrimonio, javax.swing.GroupLayout.Alignment.LEADING)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 718, Short.MAX_VALUE))
        );
        pnlPatrimonioLayout.setVerticalGroup(
            pnlPatrimonioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 561, Short.MAX_VALUE)
            .addGroup(pnlPatrimonioLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlPatrimonioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlPatrimonioLayout.createSequentialGroup()
                        .addGroup(pnlPatrimonioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlPatrimonioLayout.createSequentialGroup()
                                .addGap(11, 11, 11)
                                .addComponent(lblID)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(pnlPatrimonioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tfdIDPatrimonio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(pnlPatrimonioLayout.createSequentialGroup()
                                        .addGap(26, 26, 26)
                                        .addComponent(lblCodigo))))
                            .addComponent(lblPatrimonio))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfdCodigoPatrimonio, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblDescricao)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfdDescricaoPatrimonio, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblGrauConservacao)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbxConservacao, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblStatus)
                        .addGap(0, 0, 0)
                        .addComponent(cbxStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblNotaFiscal)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfdNotaFiscalPatrimonio, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbxOrgao, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pnlPatrimonioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnExcluirPatrimonio)
                            .addComponent(btnNovoPatrimonio)
                            .addComponent(btnSalvarPatrimonio)
                            .addComponent(btnAlterarPatrimonio)
                            .addComponent(btnCancelarPatrimonio)))
                    .addGroup(pnlPatrimonioLayout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlPatrimonio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlPatrimonio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void atualizaTabelaPatrimonio() {

        try {
            listaPatrimonio = patrimonioDAO.listaTodos();
        } catch (SQLException ex) {
            Logger.getLogger(EntidadeView.class.getName()).log(Level.SEVERE, null, ex);
        }
        String dados[][] = new String[listaPatrimonio.size()][8];
        int i = 0;
        for (PatrimonioM pat : listaPatrimonio) {
            dados[i][0] = String.valueOf(pat.getId());
            dados[i][1] = pat.getDescricao();
            dados[i][2] = pat.getCodigo();
            dados[i][3] = pat.getSubTipo().getDescricao();
            dados[i][4] = pat.getSala().getDescricao();
            dados[i][5] = pat.getGrau_conservacao().getDescricao();
            dados[i][6] = pat.getStatus().getNome();
            dados[i][7] = pat.getEntidade().getNome();
            i++;
        }
        String tituloColuna[] = {"ID", "Codigo", "Descrição", "Subtipo", "Sala", "Grau de Conservação", "Status", "Entidade"};
        DefaultTableModel tabelaCliente = new DefaultTableModel();
        tabelaCliente.setDataVector(dados, tituloColuna);
        tbePatrimonio.setModel(new DefaultTableModel(dados, tituloColuna) {
            boolean[] canEdit = new boolean[]{
                false, false, false, false, false, false, false, false, false, false
            };

            @Override
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        });

        tbePatrimonio.getColumnModel().getColumn(0).setPreferredWidth(80);
        tbePatrimonio.getColumnModel().getColumn(1).setPreferredWidth(100);
        tbePatrimonio.getColumnModel().getColumn(2).setPreferredWidth(150);
        tbePatrimonio.getColumnModel().getColumn(3).setPreferredWidth(150);
        tbePatrimonio.getColumnModel().getColumn(4).setPreferredWidth(100);
        tbePatrimonio.getColumnModel().getColumn(5).setPreferredWidth(100);
        tbePatrimonio.getColumnModel().getColumn(6).setPreferredWidth(100);
        tbePatrimonio.getColumnModel().getColumn(7).setPreferredWidth(100);

        DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
        centralizado.setHorizontalAlignment(SwingConstants.CENTER);
        tbePatrimonio.getColumnModel().getColumn(0).setCellRenderer(centralizado);
        tbePatrimonio.setRowHeight(25);
        tbePatrimonio.updateUI();
    }
    
    public void atualizaBoxTipo() {
        cbxTipo.removeAllItems();
        cbxTipo.addItem("--Selecione--");
        try {
            listaTipo = tipoDAO.listaTodos();
        } catch (SQLException ex) {
            Logger.getLogger(EntidadeView.class.getName()).log(Level.SEVERE, null, ex);
        }
        String dados[][] = new String[listaTipo.size()][5];
        int i = 0;
        for (TipoM tip : listaTipo) {
            cbxTipo.addItem(tip.getDescricao());
        }
    }

    public void atualizaBoxEntidade() {
        cbxOrgao.removeAllItems();
        cbxOrgao.addItem("--Selecione--");
        try {
            listaEntidade = entidadeDAO.listaTodos();
        } catch (SQLException ex) {
            Logger.getLogger(EntidadeView.class.getName()).log(Level.SEVERE, null, ex);
        }
        String dados[][] = new String[listaEntidade.size()][5];
        int i = 0;
        for (EntidadeM ent : listaEntidade) {
            cbxOrgao.addItem(ent.getNome());
        }
    }

    public void atualizaBoxGrauConservacao() {
        cbxConservacao.removeAllItems();
        cbxConservacao.addItem("--Selecione--");
        try {
            listaGrau = grauDAO.listaTodos();
        } catch (SQLException ex) {
            Logger.getLogger(EntidadeView.class.getName()).log(Level.SEVERE, null, ex);
        }
        String dados[][] = new String[listaGrau.size()][5];
        int i = 0;
        for (GrauConservacaoM gra : listaGrau) {
            cbxConservacao.addItem(gra.getDescricao());
        }
    }

    public void atualizaBoxStatus() {
        cbxStatus.removeAllItems();
        cbxStatus.addItem("--Selecione--");
        try {
            listaStatus = statusDAO.listaTodos();
        } catch (SQLException ex) {
            Logger.getLogger(EntidadeView.class.getName()).log(Level.SEVERE, null, ex);
        }
        String dados[][] = new String[listaStatus.size()][5];
        int i = 0;
        for (StatusM stat : listaStatus) {
            cbxStatus.addItem(stat.getNome());
        }
    }

    private void cbxBlocoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxBlocoActionPerformed
        if (cbxBloco.getSelectedIndex() < 1) {
            cbxPiso.removeAllItems();
            cbxPiso.addItem("--Selecione--");
        } else {
            cbxPiso.removeAllItems();
            cbxPiso.addItem("--Selecione--");
            BlocoM bloc = new BlocoM();

            try {
                bloc = blocoDAO.buscaNome(cbxBloco.getSelectedItem().toString());
                listaPiso = pisoDAO.buscaBloc(bloc.getId());
                for (PisoM pis : listaPiso) {
                    cbxPiso.addItem(pis.getDescricao());
                }
            } catch (SQLException ex) {
                cbxPiso.removeAllItems();
                cbxPiso.addItem("--Selecione--");
            }
        }
    }//GEN-LAST:event_cbxBlocoActionPerformed

    public void atualizaBoxUnidade() {
        cbxUnidade.removeAllItems();
        cbxUnidade.addItem("--Selecione--");
        try {
            listaUnidade = unidadeDAO.listaTodos();
        } catch (SQLException ex) {
            Logger.getLogger(EntidadeView.class.getName()).log(Level.SEVERE, null, ex);
        }
        String dados[][] = new String[listaUnidade.size()][5];
        int i = 0;
        for (UnidadeM uni : listaUnidade) {
            cbxUnidade.addItem(uni.getNome());
        }

    }

    private void cbxSalaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxSalaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbxSalaActionPerformed

    private void cbxUnidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxUnidadeActionPerformed
        if (cbxUnidade.getSelectedIndex() < 1) {
            cbxBloco.removeAllItems();
            cbxBloco.addItem("--Selecione--");

        } else {
            cbxBloco.removeAllItems();
            cbxBloco.addItem("--Selecione--");
            UnidadeM unid = new UnidadeM();
            try {
                unid = unidadeDAO.buscaNome(cbxUnidade.getSelectedItem().toString());
                listaBloco = blocoDAO.buscaUni(unid.getId());
                for (BlocoM bloc : listaBloco) {
                    cbxBloco.addItem(bloc.getDescricao());
                }
            } catch (SQLException ex) {
                Logger.getLogger(PisoView.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_cbxUnidadeActionPerformed

    private void cbxPisoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxPisoActionPerformed
        if (cbxPiso.getSelectedIndex() < 1) {
            cbxSala.removeAllItems();
            cbxSala.addItem("--Selecione--");
        } else {
            cbxSala.removeAllItems();
            cbxSala.addItem("--Selecione--");
            PisoM pis = new PisoM();

            try {
                pis = pisoDAO.buscaNome(cbxPiso.getSelectedItem().toString());
                listaSala = salaDAO.buscaPis(pis.getId());
                for (SalaM sal : listaSala) {
                    cbxSala.addItem(sal.getDescricao());
                }
            } catch (SQLException ex) {
                cbxPiso.removeAllItems();
                cbxPiso.addItem("--Selecione--");
            }
        }
    }//GEN-LAST:event_cbxPisoActionPerformed

    private void cbxConservacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxConservacaoActionPerformed

    }//GEN-LAST:event_cbxConservacaoActionPerformed

    private void cbxTipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxTipoActionPerformed
        if (cbxTipo.getSelectedIndex() < 1) {
            cbxSuptipo.removeAllItems();
            cbxSuptipo.addItem("--Selecione--");
        } else {
            cbxSuptipo.removeAllItems();
            cbxSuptipo.addItem("--Selecione--");
            TipoM tip = new TipoM();
            try {
                tip = tipoDAO.buscaNome(cbxTipo.getSelectedItem().toString());
                listaSub = subtipoDAO.buscaTipo(tip.getId());
                for (SubTipoM subt : listaSub) {
                    cbxSuptipo.addItem(subt.getDescricao());
                }
            } catch (SQLException ex) {
                cbxSuptipo.removeAllItems();
                cbxSuptipo.addItem("--Selecione--");
            }
        }
    }//GEN-LAST:event_cbxTipoActionPerformed

    private void btnNovoPatrimonioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoPatrimonioActionPerformed
        limpaCamposPatrimonio();
        preparaNovo();
        ativaCampos();
        tfdCodigoPatrimonio.requestFocusInWindow();  
    }//GEN-LAST:event_btnNovoPatrimonioActionPerformed

    private void tbePatrimonioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbePatrimonioMouseClicked
        
        tfdIDPatrimonio.setText(tbePatrimonio.getValueAt(tbePatrimonio.getSelectedRow(), 0).toString());
        tfdCodigoPatrimonio.setText(tbePatrimonio.getValueAt(tbePatrimonio.getSelectedRow(), 1).toString());
        tfdDescricaoPatrimonio.setText(tbePatrimonio.getValueAt(tbePatrimonio.getSelectedRow(), 2).toString());
        PatrimonioM patri = pegaPatrimonio();
        
        cbxTipo.setSelectedItem(patri.getSubTipo().getTipo().getDescricao());
        cbxSuptipo.setSelectedItem(tbePatrimonio.getValueAt(tbePatrimonio.getSelectedRow(), 3).toString());
       
        cbxUnidade.setSelectedItem(patri.getSala().getPiso().getBloco().getUnidadeM().getNome());
        cbxBloco.setSelectedItem(patri.getSala().getPiso().getBloco().getDescricao());
        cbxPiso.setSelectedItem(patri.getSala().getPiso().getDescricao());
        cbxSala.setSelectedItem(patri.getSala().getDescricao());
        cbxConservacao.setSelectedItem(tbePatrimonio.getValueAt(tbePatrimonio.getSelectedRow(), 5).toString());
        cbxStatus.setSelectedItem(tbePatrimonio.getValueAt(tbePatrimonio.getSelectedRow(), 6).toString());
       cbxOrgao.setSelectedItem(tbePatrimonio.getValueAt(tbePatrimonio.getSelectedRow(), 7).toString());
        
       
        preparaSelecaoTabelaPatrimonio();
    }//GEN-LAST:event_tbePatrimonioMouseClicked

    
    public PatrimonioM pegaPatrimonio(){
        try {
            PatrimonioM patrimo = patrimonioDAO.busca(Integer.parseInt(tbePatrimonio.getValueAt(tbePatrimonio.getSelectedRow(), 0).toString()));
            return patrimo;
        } catch (SQLException ex) {
            Logger.getLogger(PatrimonioView.class.getName()).log(Level.SEVERE, null, ex);
        }
        return null;
    }
    
    private void btnSalvarPatrimonioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarPatrimonioActionPerformed
        if (tfdDescricaoPatrimonio.getText().isEmpty() || tfdCodigoPatrimonio.getText().isEmpty() || tfdNotaFiscalPatrimonio.getText().isEmpty() || cbxSala.getSelectedIndex() == 0 || cbxConservacao.getSelectedIndex() == 0 || cbxOrgao.getSelectedIndex() == 0 || cbxStatus.getSelectedIndex() == 0 || cbxSuptipo.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(null, "Prencha todos os campos", "Erro", JOptionPane.WARNING_MESSAGE);
            tfdDescricaoPatrimonio.requestFocusInWindow();
        } else {
            patrimonio = new PatrimonioM();
            patrimonio.setDescricao(tfdDescricaoPatrimonio.getText());
            patrimonio.setCodigo(tfdCodigoPatrimonio.getText());
            patrimonio.setEntidade(pegaEntidade());
            patrimonio.setGrau_conservacao(pegaGrau());
            patrimonio.setNotaFiscal(tfdNotaFiscalPatrimonio.getText());
            patrimonio.setSala(pegaSala());
            patrimonio.setStatus(pegaStatus());
            patrimonio.setSubTipo(pegaSubtipo());
            try {

                patrimonioDAO.salvar(patrimonio);
                JOptionPane.showMessageDialog(null, "Gravado com Sucesso", "Sucesso", JOptionPane.INFORMATION_MESSAGE);
                atualizaTabelaPatrimonio();
            } catch (SQLException ex) {
                Logger.getLogger(EntidadeView.class.getName()).log(Level.SEVERE, null, ex);
                if (ex.getErrorCode() == 1062) {
                    JOptionPane.showMessageDialog(null, "Patrimonio já existente", "Erro", JOptionPane.WARNING_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(null, ex.getMessage(), "Erro", JOptionPane.WARNING_MESSAGE);
                }
            }

            //limpaCamposPatrimonio();
        }
    }//GEN-LAST:event_btnSalvarPatrimonioActionPerformed

    private void btnExcluirPatrimonioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirPatrimonioActionPerformed
        if (tfdIDPatrimonio.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Selecione um Patrimonio", "Erro", JOptionPane.WARNING_MESSAGE);
        } else {
            patrimonio = new PatrimonioM();
            patrimonio.setId(Integer.parseInt(tfdIDPatrimonio.getText()));
            int confirma = JOptionPane.showConfirmDialog(null, "Deseja Excluir: " + tfdDescricaoPatrimonio.getText() + " ?");
            if (confirma == 0) {
                try {
                    patrimonioDAO.excluir(patrimonio);
                    limpaCamposPatrimonio();
                    atualizaTabelaPatrimonio();
                    preparaExcluir();
                    desativaCampos();
                    JOptionPane.showMessageDialog(null, "Patrimônio excluído com sucesso.", "Sucesso", JOptionPane.INFORMATION_MESSAGE);
                    btnExcluirPatrimonio.setEnabled(false);
                    btnAlterarPatrimonio.setEnabled(false);
                    btnSalvarPatrimonio.setEnabled(true);
                } catch (SQLException ex) {
                    Logger.getLogger(EntidadeView.class.getName()).log(Level.SEVERE, null, ex);
                }

            }
        
        }
        
    }//GEN-LAST:event_btnExcluirPatrimonioActionPerformed

    private void btnAlterarPatrimonioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarPatrimonioActionPerformed
        preparaAlterar();
        ativaCampos();
    }//GEN-LAST:event_btnAlterarPatrimonioActionPerformed

    private void btnCancelarPatrimonioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarPatrimonioActionPerformed
        limpaCamposPatrimonio();
        preparaSalvareCancelar();
        desativaCampos();       
    }//GEN-LAST:event_btnCancelarPatrimonioActionPerformed

    public EntidadeM pegaEntidade() {
        try {
            return entidadeDAO.buscaNome(cbxOrgao.getSelectedItem().toString());
        } catch (SQLException ex) {
            Logger.getLogger(BlocoView.class.getName()).log(Level.SEVERE, null, ex);
        }
        return null;
    }

    public GrauConservacaoM pegaGrau() {
        try {
            return grauDAO.buscaNome(cbxConservacao.getSelectedItem().toString());
        } catch (SQLException ex) {
            Logger.getLogger(BlocoView.class.getName()).log(Level.SEVERE, null, ex);
        }
        return null;
    }

    public SalaM pegaSala() {
        try {
            return salaDAO.buscaNome(cbxSala.getSelectedItem().toString());
        } catch (SQLException ex) {
            Logger.getLogger(BlocoView.class.getName()).log(Level.SEVERE, null, ex);
        }
        return null;
    }

    public SubTipoM pegaSubtipo() {
        try {
            return subtipoDAO.buscaNome(cbxSuptipo.getSelectedItem().toString());
        } catch (SQLException ex) {
            Logger.getLogger(BlocoView.class.getName()).log(Level.SEVERE, null, ex);
        }
        return null;
    }

    public StatusM pegaStatus() {
        try {
            return statusDAO.buscaNome(cbxStatus.getSelectedItem().toString());
        } catch (SQLException ex) {
            Logger.getLogger(BlocoView.class.getName()).log(Level.SEVERE, null, ex);
        }
        return null;
    }

    // INÍCIO MÉTODOS DE CONTROLE DE BOTÕES 
    
    public void limpaCamposPatrimonio() {
        cbxUnidade.setSelectedIndex(0);
        cbxTipo.setSelectedIndex(0);
        cbxConservacao.setSelectedIndex(0);
        cbxStatus.setSelectedIndex(0);
        cbxOrgao.setSelectedIndex(0);
        tfdIDPatrimonio.setText("");
        tfdCodigoPatrimonio.setText("");
        tfdDescricaoPatrimonio.setText("");
        tfdNotaFiscalPatrimonio.setText("");
        btnNovoPatrimonio.setEnabled(true);
        
       
        cbxStatus.setEnabled(true);
        cbxConservacao.setEnabled(true);
        cbxOrgao.setEnabled(true);
        
        cbxUnidade.setEnabled(true);
        cbxBloco.setEnabled(true);
        cbxPiso.setEnabled(true);
        cbxSala.setEnabled(true);
        cbxTipo.setEnabled(true);
        cbxSuptipo.setEnabled(true);
    }
    
    public void preparaNovo() {
        btnNovoPatrimonio.setEnabled(false);
        btnCancelarPatrimonio.setEnabled(true);
        btnSalvarPatrimonio.setEnabled(true);
        btnAlterarPatrimonio.setEnabled(false);
        btnExcluirPatrimonio.setEnabled(false);
        tbePatrimonio.setEnabled(false);
        tbePatrimonio.clearSelection();
    }
    public void preparaSalvareCancelar() {
        btnNovoPatrimonio.setEnabled(true);
        btnCancelarPatrimonio.setEnabled(false);
        btnSalvarPatrimonio.setEnabled(false);
        tbePatrimonio.setEnabled(true);
    }
    
    public void ativaCampos() {
        tfdCodigoPatrimonio.setEnabled(true);
        tfdDescricaoPatrimonio.setEnabled(true);
        tfdNotaFiscalPatrimonio.setEnabled(true);
       
       cbxConservacao.setEnabled(true);     
       cbxStatus.setEnabled(true);
       cbxOrgao.setEnabled(true);
     
        
    }
    
    public void desativaCampos(){
        
       cbxConservacao.setSelectedIndex(0);
       cbxConservacao.setEnabled(false);
       cbxStatus.setSelectedIndex(0);
       cbxStatus.setEnabled(false);
       cbxOrgao.setSelectedIndex(0);
       cbxOrgao.setEnabled(false);
        cbxUnidade.setEnabled(false);
        cbxUnidade.setSelectedIndex(0);
        cbxBloco.setEnabled(false);
        cbxBloco.setSelectedIndex(0);
        cbxPiso.setEnabled(false);
        cbxPiso.setSelectedIndex(0);
        cbxSala.setEnabled(false);
        cbxSala.setSelectedIndex(0);
        cbxTipo.setEnabled(false);
        cbxTipo.setSelectedIndex(0);
        cbxSuptipo.setEnabled(false);
        cbxSuptipo.setSelectedIndex(0);
       
       
       tfdIDPatrimonio.setText("");
       tfdIDPatrimonio.setEnabled(false);
        tfdCodigoPatrimonio.setText("");
       tfdCodigoPatrimonio.setEnabled(false);
        tfdDescricaoPatrimonio.setText("");
       tfdDescricaoPatrimonio.setEnabled(false);
        tfdNotaFiscalPatrimonio.setText("");
       tfdNotaFiscalPatrimonio.setEnabled(false);
 
       btnCancelarPatrimonio.setEnabled(false);
       btnSalvarPatrimonio.setEnabled(false);
       btnAlterarPatrimonio.setEnabled(false);
       btnExcluirPatrimonio.setEnabled(false);
    } 
    public void preparaAlterar() {
        btnNovoPatrimonio.setEnabled(false);
        btnExcluirPatrimonio.setEnabled(false);
        btnAlterarPatrimonio.setEnabled(false);
        btnCancelarPatrimonio.setEnabled(true);
        btnSalvarPatrimonio.setEnabled(true);
        
        cbxConservacao.setEnabled(false);
        cbxStatus.setEnabled(false);
        cbxOrgao.setEnabled(false);
        tbePatrimonio.setEnabled(false);        
        tbePatrimonio.clearSelection();
        tfdDescricaoPatrimonio.requestFocusInWindow();
    
    }
    public void preparaExcluir() {
        btnExcluirPatrimonio.setEnabled(false);
        btnAlterarPatrimonio.setEnabled(false);
    }
     
    public void preparaSelecaoTabelaPatrimonio(){
       
        btnNovoPatrimonio.setEnabled(true);
        btnExcluirPatrimonio.setEnabled(true);
        btnAlterarPatrimonio.setEnabled(true);
       
 
    }
         
     // FIM MÉTODOS DE CONTROLE DE BOTÕES 
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAlterarPatrimonio;
    private javax.swing.JButton btnCancelarPatrimonio;
    private javax.swing.JButton btnExcluirPatrimonio;
    private javax.swing.JButton btnNovoPatrimonio;
    private javax.swing.JButton btnSalvarPatrimonio;
    private javax.swing.JComboBox<String> cbxBloco;
    private javax.swing.JComboBox<String> cbxConservacao;
    private javax.swing.JComboBox<String> cbxOrgao;
    private javax.swing.JComboBox<String> cbxPiso;
    private javax.swing.JComboBox<String> cbxSala;
    private javax.swing.JComboBox<String> cbxStatus;
    private javax.swing.JComboBox<String> cbxSuptipo;
    private javax.swing.JComboBox<String> cbxTipo;
    private javax.swing.JComboBox<String> cbxUnidade;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCodigo;
    private javax.swing.JLabel lblDescricao;
    private javax.swing.JLabel lblGrauConservacao;
    private javax.swing.JLabel lblID;
    private javax.swing.JLabel lblNotaFiscal;
    private javax.swing.JLabel lblPatrimonio;
    private javax.swing.JLabel lblSelecBloco;
    private javax.swing.JLabel lblSelecPiso;
    private javax.swing.JLabel lblSelecSala;
    private javax.swing.JLabel lblSelecSubtipo;
    private javax.swing.JLabel lblSelecTipo;
    private javax.swing.JLabel lblSelecUnidade;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JPanel pnlPatrimonio;
    private javax.swing.JTable tbePatrimonio;
    private javax.swing.JTextField tfdCodigoPatrimonio;
    private javax.swing.JTextField tfdDescricaoPatrimonio;
    private javax.swing.JTextField tfdIDPatrimonio;
    private javax.swing.JTextField tfdNotaFiscalPatrimonio;
    // End of variables declaration//GEN-END:variables
}
