/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import dao.BlocoDAO;
import dao.GrauConservacaoDAO;
import dao.OrgaoDAO;
import dao.PatrimonioDAO;
import dao.PisoDAO;
import dao.SubTipoDAO;
import dao.TipoDAO;
import dao.UnidadeDAO;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import model.BlocoM;
import model.GrauConservacaoM;
import model.OrgaoM;
import model.PatrimonioM;
import model.PisoM;
import model.SubTipoM;
import model.TipoM;
import model.UnidadeM;

/**
 *
 * @author Leopo
 */
public class BaixadoView extends javax.swing.JInternalFrame {

    /**
     * Creates new form BaixadoView
     */
    List<PatrimonioM> listaPatrimonio;
    List<UnidadeM> listaUnidade;
    UnidadeDAO unidadeDAO;
    List<BlocoM> listaBloco;
    BlocoDAO blocoDAO;
    List<PisoM> listaPiso;
    PisoDAO pisoDAO;
    UnidadeM unidadeM;
    BlocoM blocoM;
    PisoM pisoM;
    OrgaoM orgao;
    OrgaoDAO orgaoDAO;
    GrauConservacaoM conservacao;
    GrauConservacaoDAO conservacaoDAO;
    TipoM tipo;
    TipoDAO tipoDAO;
    SubTipoM subtipo;
    SubTipoDAO subtipoDAO;
    
    
    PatrimonioDAO patrimonioDAO;
    public BaixadoView() {
        initComponents();
        this.setVisible(true);
        patrimonioDAO = new PatrimonioDAO();
        preencheFiltro();
        listaPatrimonio = new ArrayList<>();
        listaUnidade = new ArrayList<>();
        unidadeDAO = new UnidadeDAO();
        listaBloco = new ArrayList<>();
        blocoDAO = new BlocoDAO();
        listaPiso = new ArrayList<>();
        pisoDAO = new PisoDAO();
        orgaoDAO = new OrgaoDAO();
        conservacaoDAO = new GrauConservacaoDAO();
        tipoDAO = new TipoDAO();
        tipo = new TipoM();
        subtipo = new SubTipoM();
        subtipoDAO = new SubTipoDAO();
    }
     public void preencheFiltro(){
        cbxFiltro.removeAllItems();
        cbxFiltro.addItem("--Selecione--");
        cbxFiltro.addItem("ID Sala");
        cbxFiltro.addItem("Codigo");
        cbxFiltro.addItem("Descrição");
        cbxFiltro.addItem("Orgão");
        cbxFiltro.addItem("Conservação");
        cbxFiltro.addItem("Subtipo");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tbeBuscaBaixados = new javax.swing.JTable();
        cbxFiltro = new javax.swing.JComboBox<>();
        btnBuscar = new javax.swing.JButton();
        tfdFiltroBusca = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();

        setClosable(true);
        setMaximizable(true);
        setResizable(true);

        tbeBuscaBaixados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Descrição", "Data", "Usuario??"
            }
        ));
        jScrollPane1.setViewportView(tbeBuscaBaixados);

        cbxFiltro.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbxFiltro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxFiltroActionPerformed(evt);
            }
        });

        btnBuscar.setText("Buscar");
        btnBuscar.setPreferredSize(new java.awt.Dimension(65, 26));
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        jLabel1.setText("Filtro");

        jButton1.setText("<<");

        jButton2.setText(">>");

        jLabel2.setText("quant de paginas");

        jTextField1.setPreferredSize(new java.awt.Dimension(6, 23));

        jLabel3.setText("Ir para:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(cbxFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(tfdFiltroBusca, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(btnBuscar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(357, 357, 357)
                        .addComponent(jButton1)
                        .addGap(4, 4, 4)
                        .addComponent(jLabel2)
                        .addGap(4, 4, 4)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 353, Short.MAX_VALUE)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(tfdFiltroBusca)
                    .addComponent(cbxFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 347, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jLabel2)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbxFiltroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxFiltroActionPerformed

    }//GEN-LAST:event_cbxFiltroActionPerformed
public void atualizaTabelaBusca(){
         String dados[][] = new String[listaPatrimonio.size()][8];
        int i = 0;
        for (PatrimonioM pat : listaPatrimonio) {
            dados[i][0] = String.valueOf(pat.getId());
            dados[i][1] = pat.getCodigo();
            dados[i][2] = pat.getDescricao();
            dados[i][3] = pat.getSubTipo().getDescricao();
            dados[i][4] = pat.getSala().getDescricao();
            dados[i][5] = pat.getGrau_conservacao().getDescricao();
            dados[i][6] = pat.getStatus().getNome();
            dados[i][7] = pat.getEntidade().getNome();
            i++;
        }
        String tituloColuna[] = {"ID", "Codigo", "Descrição", "Subtipo", "Sala", "Grau de Conservação", "Status", "Entidade"};
        DefaultTableModel tabelaCliente = new DefaultTableModel();
        tabelaCliente.setDataVector(dados, tituloColuna);
        tbeBuscaBaixados.setModel(new DefaultTableModel(dados, tituloColuna) {
            boolean[] canEdit = new boolean[]{
                false, false, false, false, false, false, false, false, false, false
            };

            @Override
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        });
        
        

        tbeBuscaBaixados.getColumnModel().getColumn(0).setPreferredWidth(60);
        tbeBuscaBaixados.getColumnModel().getColumn(1).setPreferredWidth(90);
        tbeBuscaBaixados.getColumnModel().getColumn(2).setPreferredWidth(215);
        tbeBuscaBaixados.getColumnModel().getColumn(3).setPreferredWidth(215);
        tbeBuscaBaixados.getColumnModel().getColumn(4).setPreferredWidth(100);
        tbeBuscaBaixados.getColumnModel().getColumn(5).setPreferredWidth(90);
        tbeBuscaBaixados.getColumnModel().getColumn(6).setPreferredWidth(90);
        tbeBuscaBaixados.getColumnModel().getColumn(7).setPreferredWidth(90);

        DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
        centralizado.setHorizontalAlignment(SwingConstants.CENTER);
        tbeBuscaBaixados.getColumnModel().getColumn(0).setCellRenderer(centralizado);
        tbeBuscaBaixados.setRowHeight(25);
        tbeBuscaBaixados.updateUI();
    
    } 
    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed

        if(tfdFiltroBusca.getText().equals("") || cbxFiltro.getSelectedIndex() == 0){
            JOptionPane.showMessageDialog(null, "Selecione um Filtro!!");
        }else{

            try {
                if(cbxFiltro.getSelectedItem().toString().equals("ID Sala")){
                    listaPatrimonio = null;
                    try{
                        listaPatrimonio = patrimonioDAO.listaTodosSala(Integer.parseInt(tfdFiltroBusca.getText()));

                        if(listaPatrimonio.size() < 1)
                        JOptionPane.showMessageDialog(null, "Sala não Encontrada");

                    }catch(java.lang.NumberFormatException ex){
                        JOptionPane.showMessageDialog(null, "Digite caracteres válidos!\n(Somente Numeros)");
                    }

                }else
                if(cbxFiltro.getSelectedItem().toString().equals("Codigo")) {
                    listaPatrimonio = null;
                    listaPatrimonio = patrimonioDAO.buscaPatrimonio(tfdFiltroBusca.getText());

                    if(listaPatrimonio.size() < 1)
                    JOptionPane.showMessageDialog(null, "Código não Encontrado");
                }else
                if(cbxFiltro.getSelectedItem().toString().equals("Descrição")){
                    listaPatrimonio = null;
                    listaPatrimonio = patrimonioDAO.buscaDescricao(tfdFiltroBusca.getText());

                    if(listaPatrimonio.size() < 1)
                    JOptionPane.showMessageDialog(null, "Descrição não Encontrada");
                }else
                if(cbxFiltro.getSelectedItem().toString().equals("Orgão")){
                    listaPatrimonio = null;
                    try{
                        orgao = orgaoDAO.buscaNome(tfdFiltroBusca.getText());

                        listaPatrimonio = patrimonioDAO.buscaOrgao(orgao.getId());
                    }catch(java.lang.NullPointerException ex){
                        JOptionPane.showMessageDialog(null, "Digite um orgão valido!" );
                    }
                }else
                if(cbxFiltro.getSelectedItem().toString().equals("Conservação")){
                    listaPatrimonio = null;
                    try{
                        conservacao = conservacaoDAO.buscaNome(tfdFiltroBusca.getText());
                        listaPatrimonio = patrimonioDAO.buscaConservacao(conservacao.getId());
                    }catch(java.lang.NullPointerException ex){
                        JOptionPane.showMessageDialog(null, "Digite uma Conservação valida!" );
                    }

                    if(listaPatrimonio.size() < 1)
                    JOptionPane.showMessageDialog(null, "Conservação não Encontrada");
                }else
                if(cbxFiltro.getSelectedItem().toString().equals("Subtipo")){
                    try{
                        subtipo = subtipoDAO.buscaNome(tfdFiltroBusca.getText());
                        listaPatrimonio = patrimonioDAO.buscaSubtipo(subtipo.getId());
                    }catch(java.lang.NullPointerException ex){
                        JOptionPane.showMessageDialog(null, "Digite um SubTipo valido!" );
                    }
                }

                atualizaTabelaBusca();

            } catch (SQLException ex) {
                Logger.getLogger(ConsultaView.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, ""+ex.getMessage());
            }
        }
    }//GEN-LAST:event_btnBuscarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JComboBox<String> cbxFiltro;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTable tbeBuscaBaixados;
    private javax.swing.JTextField tfdFiltroBusca;
    // End of variables declaration//GEN-END:variables
}
